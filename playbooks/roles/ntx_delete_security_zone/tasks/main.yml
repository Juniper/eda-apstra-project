---
# Nutanix Delete Security Zone Role
# Deletes Apstra security zone when Nutanix virtual switch is deleted

- name: Get blueprint name from ConfigMap
  kubernetes.core.k8s_info:
    api_version: v1
    kind: ConfigMap
    name: nutanix-eda-config
    namespace: default
  register: config_map_info

- name: Extract blueprint name from ConfigMap
  set_fact:
    blueprint_name: "{{ config_map_info.resources[0].data.BLUEPRINT_NAME }}"
  when: config_map_info.resources | length > 0

- name: Print blueprint_name from ConfigMap
  debug:
    msg: "Blueprint name from ConfigMap: {{ blueprint_name }}"

- name: Print Nutanix virtual switch event details
  debug:
    msg: 
      - "Event Type: {{ nutanix_event.event_type }}"
      - "Entity Type: {{ nutanix_event.entity_type }}"
      - "Timestamp: {{ nutanix_event.timestamp }}"
      - "API Version: {{ nutanix_event.api_version }}"
  when: nutanix_event is defined

- name: Check if this is not a deletion event
  ansible.builtin.set_fact:
    is_not_deletion: "{{ nutanix_event.event_type != 'DELETED' }}"
  when: nutanix_event is defined

- name: Exit if this is not a deletion event
  ansible.builtin.meta: end_play
  when: is_not_deletion | default(true)

- name: Extract virtual switch information from Nutanix event
  set_fact:
    vswitch_name: "{{ entity.name }}"
    vswitch_uuid: "{{ entity.uuid }}"
    vswitch_state: "{{ entity.state }}"
  when: 
    - nutanix_event is defined
    - entity is defined

- name: Debug extracted virtual switch information
  debug:
    msg: 
      - "Processing virtual switch deletion event"
      - "Virtual Switch Name: {{ vswitch_name }}"
      - "Virtual Switch UUID: {{ vswitch_uuid }}"
      - "Virtual Switch State: {{ vswitch_state }}"
      - "Blueprint Name: {{ blueprint_name }}"
  when: vswitch_name is defined

- name: Set security zone identifiers (same as vswitch name)
  set_fact:
    label_value: "{{ vswitch_name }}"
    vrf_name_value: "{{ vswitch_name }}"
    security_zone_name: "{{ vswitch_name }}"
  when: vswitch_name is defined

- name: Set the blueprint name
  set_fact:
    bluprint_label_value: "{{ blueprint_name }}"

- name: Connect to Apstra
  juniper.apstra.authenticate:
    verify_certificates: false
    logout: false
  register: auth

- block:
    - name: Get blueprint
      juniper.apstra.blueprint:
        body:
          label: "{{ bluprint_label_value }}"
        auth_token: "{{ auth.token }}"
        lock_state: "ignore"
      register: register_bp

    - name: Get security_zone by label
      juniper.apstra.security_zone:
        id: "{{ register_bp.id }}"
        body:
          label: "{{ label_value }}"
        auth_token: "{{ auth.token }}"
      register: sz
      ignore_errors: true

    - name: Delete the security_zone if it exists
      juniper.apstra.security_zone:
        id: "{{ sz.id }}"
        state: absent
        auth_token: "{{ auth.token }}"
      register: sz_delete
      when: sz is defined and not sz.failed

    - name: Debug deletion result
      debug:
        msg: 
          - "Security zone deletion completed"
          - "Virtual Switch: {{ vswitch_name }}"
          - "Security Zone: {{ security_zone_name }}"
          - "Status: {{ 'Deleted' if (sz_delete.changed | default(false)) else 'Not found or already deleted' }}"
      when: vswitch_name is defined

  rescue:        
    - name: Unlock the blueprint as task is failed
      juniper.apstra.blueprint:
        id: "{{ register_bp.id }}"
        lock_state: "unlocked"
        state: committed
        auth_token: "{{ auth.token }}"
      register: blueprint_commit
      ignore_errors: true

    - name: Debug failure information
      debug:
        msg: 
          - "Security zone deletion failed for virtual switch: {{ vswitch_name }}"
          - "This may be normal if the security zone was already deleted"

  always:
    - name: Unlock the blueprint
      juniper.apstra.blueprint:
        id: "{{ register_bp.id }}"
        lock_state: "unlocked"
        state: committed
        auth_token: "{{ auth.token }}"
      register: blueprint_unlock
      when: register_bp is defined

    - name: Commit the blueprint
      juniper.apstra.blueprint:
        id: "{{ register_bp.id }}"
        lock_state: "ignore"
        state: committed
        auth_token: "{{ auth.token }}"
      register: blueprint_commit
      when: register_bp is defined

    - name: Final status report
      debug:
        msg:
          - "=== Nutanix Virtual Switch Security Zone Deletion Complete ==="
          - "Virtual Switch: {{ vswitch_name }}"
          - "Security Zone: {{ security_zone_name }}"
          - "Blueprint: {{ blueprint_name }}"
          - "UUID: {{ vswitch_uuid | default('N/A') }}"
          - "Status: {{ 'Success' if (not sz_delete.failed | default(false)) else 'Completed with warnings' }}"
      when: vswitch_name is defined
