---
# Nutanix Create Security Zone Role
# Creates Apstra security zone when Nutanix virtual switch is created

- name: Get blueprint name from ConfigMap
  kubernetes.core.k8s_info:
    api_version: v1
    kind: ConfigMap
    name: nutanix-eda-config
    namespace: default
  register: config_map_info

- name: Extract blueprint name from ConfigMap
  set_fact:
    blueprint_name: "{{ config_map_info.resources[0].data.BLUEPRINT_NAME }}"
  when: config_map_info.resources | length > 0

- name: Print blueprint_name from ConfigMap
  debug:
    msg: "Blueprint name from ConfigMap: {{ blueprint_name }}"

- name: Print Nutanix virtual switch event details
  debug:
    msg: 
      - "Event Type: {{ nutanix_event.event_type }}"
      - "Entity Type: {{ nutanix_event.entity_type }}"
      - "Timestamp: {{ nutanix_event.timestamp }}"
      - "API Version: {{ nutanix_event.api_version }}"
  when: nutanix_event is defined

- name: Check if this is a deletion event
  ansible.builtin.set_fact:
    is_deletion: "{{ nutanix_event.event_type == 'DELETED' }}"
  when: nutanix_event is defined

- name: Exit if this is a deletion event
  ansible.builtin.meta: end_play
  when: is_deletion | default(false)

- name: Extract virtual switch information from Nutanix event
  set_fact:
    vswitch_name: "{{ entity.name }}"
    vswitch_uuid: "{{ entity.uuid }}"
    vswitch_state: "{{ entity.state }}"
  when: 
    - nutanix_event is defined
    - entity is defined

- name: Debug extracted virtual switch information
  debug:
    msg: 
      - "Processing virtual switch creation event"
      - "Virtual Switch Name: {{ vswitch_name }}"
      - "Virtual Switch UUID: {{ vswitch_uuid }}"
      - "Virtual Switch State: {{ vswitch_state }}"
      - "Blueprint Name: {{ blueprint_name }}"
  when: vswitch_name is defined

- name: Generate security zone name from virtual switch
  ansible.builtin.set_fact:
    security_zone_name: "ntx-{{ vswitch_name | lower | regex_replace('[^a-z0-9]', '-') }}"
    vrf_name: "vrf-{{ vswitch_name | lower | regex_replace('[^a-z0-9]', '-') }}"
  when: vswitch_name is defined

- name: Create tags for Nutanix virtual switch
  set_fact:
    nutanix_tags:
      - "source=nutanix_eda"
      - "vswitch_name={{ vswitch_name }}"
      - "vswitch_uuid={{ vswitch_uuid }}"
      - "entity_type=virtual_switch"
      - "event_type=created"
  when: vswitch_name is defined

- name: Get Apstra credentials from environment or default values
  set_fact:
    apstra_server: "{{ apstra_server_url | default('https://10.84.128.67:443') }}"
    apstra_username: "{{ apstra_user | default('admin') }}"
    apstra_password: "{{ apstra_pass | default('Apstrantx@2025') }}"

- name: Authenticate with Apstra
  juniper.apstra.authenticate:
    api_url: "{{ apstra_server }}"
    username: "{{ apstra_username }}"
    password: "{{ apstra_password }}"
  register: auth
  when: vswitch_name is defined

- name: Get blueprint for security zone operations
  juniper.apstra.blueprint:
    body:
      label: "{{ blueprint_name }}"
    auth_token: "{{ auth.token }}"
    lock_state: "ignore"
  register: register_bp
  when: auth is defined and auth.token is defined

- name: Set blueprint ID fact
  ansible.builtin.set_fact:
    blueprint_id: "{{ register_bp.id.blueprint }}"
  when: register_bp is defined

- name: Generate security zone name from virtual switch
  ansible.builtin.set_fact:
    security_zone_name: "ntx-{{ vswitch_name | lower | regex_replace('[^a-z0-9]', '-') }}"
    vrf_name: "vrf-{{ vswitch_name | lower | regex_replace('[^a-z0-9]', '-') }}"
  when: vswitch_name is defined

- name: Create tags for Nutanix virtual switch
  set_fact:
    nutanix_tags:
      - "source=nutanix_eda"
      - "vswitch_name={{ vswitch_name }}"
      - "vswitch_uuid={{ vswitch_uuid }}"
      - "entity_type=virtual_switch"
      - "event_type=created"
  when: vswitch_name is defined

- name: Create tags in Apstra
  juniper.apstra.tag:
    id: "{{ register_bp.id }}"
    body:
      label: "{{ tag }}"
      description: "Nutanix EDA virtual switch tag"
    auth_token: "{{ auth.token }}"
  when: nutanix_tags is defined
  loop: "{{ nutanix_tags }}"
  loop_control:
    loop_var: tag
  ignore_errors: true  # Tags may already exist

- name: Check if security zone already exists
  juniper.apstra.security_zone:
    id: "{{ register_bp.id }}"
    body:
      label: "{{ security_zone_name }}"
    auth_token: "{{ auth.token }}"
    state: "get"
  register: existing_sz
  ignore_errors: true
  when: security_zone_name is defined

- name: Create security zone for virtual switch
  juniper.apstra.security_zone:
    id: "{{ register_bp.id }}"
    body:
      label: "{{ security_zone_name }}"
      vrf_name: "{{ vrf_name }}"
      description: "Security zone for Nutanix virtual switch {{ vswitch_name }}"
    auth_token: "{{ auth.token }}"
    tags: "{{ nutanix_tags }}"
  register: sz_result
  retries: 3
  delay: 5
  until: sz_result.failed == false
  when: 
    - security_zone_name is defined
    - existing_sz.failed is defined and existing_sz.failed == true

- name: Use existing security zone if already present
  ansible.builtin.set_fact:
    sz_result: "{{ existing_sz }}"
  when: 
    - existing_sz is defined
    - existing_sz.failed is not defined or existing_sz.failed == false

- name: Debug security zone creation result
  debug:
    msg: 
      - "Security zone operation completed"
      - "Security Zone Name: {{ security_zone_name }}"
      - "VRF Name: {{ vrf_name }}"
      - "Status: {{ 'Created' if (sz_result.changed | default(false)) else 'Already exists' }}"
  when: sz_result is defined

- name: Create routing policy for security zone (if needed)
  juniper.apstra.routing_policy:
    id: "{{ register_bp.id }}"
    body:
      label: "rp-{{ security_zone_name }}"
      description: "Routing policy for {{ security_zone_name }}"
      policy_type: "import"
      statements:
        - name: "allow-local"
          action: "permit"
          from:
            - prefix_filter: "local"
    auth_token: "{{ auth.token }}"
    tags: "{{ nutanix_tags }}"
  register: rp_result
  ignore_errors: true
  when: 
    - sz_result is defined
    - sz_result.changed | default(false)

- name: Unlock and commit blueprint
  juniper.apstra.blueprint:
    id: "{{ register_bp.id }}"
    lock_state: "unlocked"
    state: committed
    auth_token: "{{ auth.token }}"
  when: 
    - sz_result is defined
    - (sz_result.changed | default(false)) or (rp_result.changed | default(false))

- name: Final status report
  debug:
    msg:
      - "=== Nutanix Virtual Switch Security Zone Creation Complete ==="
      - "Virtual Switch: {{ vswitch_name }}"
      - "Security Zone: {{ security_zone_name }}"
      - "VRF: {{ vrf_name }}"
      - "Blueprint: {{ blueprint_name }}"
      - "UUID: {{ vswitch_uuid | default('N/A') }}"
      - "Status: Success"
  when: sz_result is defined
